name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t my-static-website .
          docker save my-static-website | gzip > my-static-website.tar.gz
        id: docker_build

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: my-static-website.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: .

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqy unzip python3-pip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          pip3 install ansible boto boto3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform -chdir=terraform init

      - name: Apply Terraform configuration
        run: terraform -chdir=terraform apply -auto-approve

      - name: Get instance IP
        id: terraform
        run: echo "::set-output name=instance_ip::$(terraform -chdir=terraform output -raw instance_ip)"

      - name: Configure AWS instance with Ansible
        env:
          INSTANCE_IP: ${{ steps.terraform.outputs.instance_ip }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ansible-playbook -i "$INSTANCE_IP," --private-key ~/.ssh/id_rsa ansible/playbook.yml